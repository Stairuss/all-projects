Александр здравствуйте!)

Давненько я не присылал никаких работ, тк сначала занимался строительством дома на даче, затем ремонт в квартире и все это немного затянулось) Хочу сказать несколько слов о том как вообще проходила моя работа).

Таких больших работ я еще никогда не писал и в голове у меня была просто каша)) У меня практически не получалось продумывать код наперед и сразу понимать как будет выглядеть код, какая будет логика и тд. Я разбирался на ходу, по 100500 раз переписывал одни и те же участки кода потому что они былы не продуманы на дальнейшие действия.

С самого начала задания я захотел реализовать не только backend но и более менее приемлемый frontend, но тк курс посвящен языку PHP, то я и хотел и backend и forntend написать именно на PHP, я планировал что в коде будет немного JavaScript, но я планировал что его будет по - минимуму чисто как вишенка на торте))

Вот я написал регистрацию, авторизацию, изменение пользователя, выгрузку данных на страницу при открытии страницы и все это было на PHP, то есть я все контроллеры и функции писал под PHP, но дело в том что что бы внести какие то изменения на страницу через PHP, то страница должна обновиться и до этого момента я даже не думал о JavaScript.

Но когда я дошел до работы с файлами и до всего остального функционала я понял, ну это же бред каждый раз обновлять страницу при добавлении или удалении файла например, если бы я продолжил писать все на PHP то у меня после каждого незначительного действия каждый раз бы обновлялась страница.

Вот с этого момента я начал писать много JavaScripta, что бы без обновления страницы происходили все изменения, при этом старый функционал который уже был написан на PHP я не стал тк менять и в итоге получилась такая логика работы программы - когда страница загружается первый раз то все данные на странице прорисовывает PHP, а когда страница загрузилась и я начинаю на ней что то менять, то тут PHP только отдает данные, а JS помещает эти данные на страницу. В общем получилось конечно не очень хорошо, тк у меня одни и те же действия дублируются сначала для PHP для первичной загрузки страницы, а затем все тоже самое но на JS для динамических изменений.

​За это задание я получил конечно колоссальное количества информации и навыков и при следующих работах сделаю код намного лучше, тк я уже понимаю как вообще это все работает.

Какие главные выводы я сделал от этой работы:

1) PHP только отдает данные, страницу прорисовывает JS

2) У меня прописан роутер который решает какой контроллер запускать в зависимости от поступающего запроса, дак вот у меня он принимает решения на основании URLа без учета методов запроса, сейчас я уже знаю как можно прописать роутер намного лучше что бы он учитывал методы запроса и все было по правилам REST API.

3) Я так понял что 1 класс должен выполнять какое то 1 действие, для того что бы его можно было переиспользовать, а у меня классы получились большими и многозадачными и в целом код получился не расширяемый.

​----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------

С вступлением я наверное закончил, теперь расскажу конкретно о программе.

Я не смог разобраться куда именно отправлять работу на GitLab, поэтому прикрепляю работу архивом к этому сообщению, если бы вы мне подсказали куда именно сохранять на GitLabe я без проблем отправлю работу туда)

Саму же программу я запустил на своем сервере - https://sanya.nasmj.online по этой ссылке можно проверить ее в работе. Доступ к базе данных - https://sanya.nasmj.online/phpmyadmin ,  Login: sanya, Pass: sanyapass143795@@

Теперь по функционалу.

Базовые функции обьяснять не буду, но если вдруг что то будет не понятно то без проблем смогу пояснить, сейчас опишу только не совсем очевидные моменты.

1) При регистрации пользователю присваивается статус "user"

2) При нажатии на кнопку "Действие"-> "Присвоить статус admin"  нужно ввести пароль "0000", после этого ваш аккаунт станет администратором.

В режиме администратора можно: 1) Удалять и редактировать других пользователей

                                                                2) При нажатии на каждого пользователя можно посмотреть его файлы в корневой папке                                                                    !!!БЕЗ перемещения по его папкам, я это не стал делать тк этого не было в задании а я                                                                        уже и так много времени потратил)

                                                                3) Что бы вернуться обратно в режим пользователя нужно нажать "Действие"->                                                                                      "Присвоить статус user"

3) Папки нельзя скачивать и делиться ими, я это специально запретил опять же в связи с тем что я уже и так много времени потратил, а мне еще нужно спешить проходить Laravel что бы получить доступ к центру вакансий skillbox)

4) Что бы провалиться внутрь папки нужно 2 раза на нее нажать, что бы сделать шаг назад есть синяя стрелочка в панели интерфейса.

5) Управление доступом:

На каждом файле есть значек "управление доступом", если на него нажать то откроется окно с инпутом и таблицей. В инпут нужно ввести email пользователя с котором хочешь поделиться файлом, а ниже в таблице будет список пользователей с которыми ты уже поделился и у которых есть доступ к файлу, доступ можно отозвать.

Что бы посмотреть файлы которыми с тобой поделились другие пользователи, в панели интерфейса нужно нажать на значек "предоставленные файлы", тогда откроется список файлов которыми с тобой поделились, их можно скачать.